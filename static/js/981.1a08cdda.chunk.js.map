{"version":3,"file":"static/js/981.1a08cdda.chunk.js","mappings":"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","sources":["api/fetch-movies.js","components/Loader/Loader.jsx","components/Text/Text.styled.js","components/GoBack/GoBack.styled.js","components/GoBack/GoBack.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = '5a1775956ea4e1cf9e88872469faee97';\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchSubmitMovies = async query => {\n  const response = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchDetailsMovies = async movie_id => {\n  const response = await axios.get(`${URL}/movie/${movie_id}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchCast = async movie_id => {\n  const response = await axios.get(\n    `${URL}/movie/${movie_id}/credits?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movie_id => {\n  const response = await axios.get(\n    `${URL}/movie/${movie_id}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n};\n","import ClipLoader from 'react-spinners/ClipLoader';\n\nexport const Loader = ({ loading }) => {\n  return (\n    <ClipLoader\n      color=\"orange\"\n      loading={loading}\n      size={100}\n      aria-label=\"Loading Spinner\"\n      data-testid=\"loader\"\n    />\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 30px;\n  font-weight: 700;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 0;\n  color: black;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: orange;\n  }\n`;\n","import { BsBoxArrowLeft } from 'react-icons/bs';\nimport { StyledLink } from './GoBack.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsBoxArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  margin: 10px 0;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n`;\n\nexport const BoxInfoMovie = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n`;\n\nexport const BoxInfo = styled.div`\n  display: flex;\n  padding-top: 5px;\n  flex-direction: column;\n  gap: 15px;\n  border-top: 1px solid #9c9c9c;\n  background-color: #e8e7e6;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0 0 10px 20px;\n  gap: 10px;\n  border-bottom: 1px solid #9c9c9c;\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-weight: 500;\n  :hover {\n    color: orange;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { BackLink } from 'components/GoBack/GoBack';\nimport {\n  Box,\n  BoxInfo,\n  BoxInfoMovie,\n  Img,\n  LinkStyled,\n  List,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  poster_path,\n  title,\n  overview,\n  genres = [],\n  vote_average,\n  vote_count,\n  release_date = '',\n}) => {\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://via.placeholder.com/300x450';\n  const stringGenres = genres.map(genre => genre.name).join(' ');\n  const userScore = Math.round(vote_average * 10);\n  const date = release_date.split('-')[0];\n\n  const location = useLocation();\n  const backLinkHref = location?.state?.from || '/';\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <Box>\n        <Img src={posterUrl} alt=\"\" />\n        <BoxInfoMovie>\n          <h2>\n            {title} ({date})\n          </h2>\n          <p>\n            User Score: {userScore}% ({vote_count})\n          </p>\n          <b>Overview</b>\n          <p>{overview} </p>\n          <b>Genres</b>\n          <p>{stringGenres} </p>\n        </BoxInfoMovie>\n      </Box>\n      <BoxInfo>\n        <h3>Additional information</h3>\n        <List>\n          <li>\n            <LinkStyled to=\"cast\">Cast</LinkStyled>\n          </li>\n          <li>\n            <LinkStyled to=\"reviews\">Reviews</LinkStyled>\n          </li>\n        </List>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </BoxInfo>{' '}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchDetailsMovies } from 'api/fetch-movies';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { Text } from 'components/Text/Text.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movie = () => {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchDetailsMovies(movieId)\n      .then(data => setMovie(data))\n      .catch(err => setError(err.message))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n  return (\n    <>\n      {<Loader loading={isLoading} />}\n      <MovieInfo {...movie} />\n      {error && <Text textAlign=\"center\">{error}</Text>}\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["URL","KEY","fetchMovies","axios","response","data","fetchSubmitMovies","query","fetchDetailsMovies","movie_id","fetchCast","fetchReviews","Loader","loading","color","size","Text","styled","StyledLink","Link","BackLink","to","children","Box","Img","BoxInfoMovie","BoxInfo","List","LinkStyled","MovieInfo","poster_path","title","overview","genres","vote_average","vote_count","release_date","posterUrl","stringGenres","map","genre","name","join","userScore","Math","round","date","split","location","useLocation","backLinkHref","state","from","src","alt","Suspense","useState","movie","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","then","catch","err","message","finally","textAlign"],"sourceRoot":""}